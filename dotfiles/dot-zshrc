# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Source all .zsh files (including symlinks and hidden files) in $HOME
if [[ -d "$HOME" ]]; then
    setopt nullglob dotglob
    for file in "$HOME"/*.zsh; do
        [[ -r "$file" && (-f "$file" || -L "$file") ]] && source "$file"
    done
    unsetopt nullglob dotglob
fi

# History
HISTORY_IGNORE="(ls|cd|eza|la|eat|cat)"
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS

# Conditionals
if [ -S ${HOME}/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock ]; then
    export SSH_AUTH_SOCK=${HOME}/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
fi

if (( $+commands[bat] )); then
  alias cat='bat --paging=never --style="numbers,changes"'
  export BAT_THEME="TwoDark"
fi

if (( $+commands[eza] )); then
  alias la="eza -la --group-directories-first"
  alias lat="eza -laT --group-directories-first"
fi

if (( $+commands[fzf] )); then
  # Setup fzf
  # ---------
  if [[ ! "$PATH" == */opt/homebrew/opt/fzf/bin* ]]; then
    PATH="${PATH:+${PATH}:}/opt/homebrew/opt/fzf/bin"
  fi

  # Auto-completion
  # ---------------
  [[ $- == *i* ]] && source "/opt/homebrew/opt/fzf/shell/completion.zsh" 2> /dev/null

  # Key bindings
  # ------------
  source "/opt/homebrew/opt/fzf/shell/key-bindings.zsh"

  # fzf + rg
  # ------------
  irg() {
    RG_PREFIX="rg --hidden --column --line-number --no-heading --color=always --smart-case "
    INITIAL_QUERY="${*:-}"
    IFS=: read -rA selected <<<$(
      FZF_DEFAULT_COMMAND="$RG_PREFIX $(printf %q "$INITIAL_QUERY")" \
      fzf --ansi \
        --color "hl:-1:underline,hl+:-1:underline:reverse" \
        --disabled --query "$INITIAL_QUERY" \
        --bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
        --bind "ctrl-f:unbind(change,ctrl-f)+change-prompt(2. fzf> )+enable-search+clear-query+rebind(ctrl-r)" \
        --bind "ctrl-r:unbind(ctrl-r)+change-prompt(1. ripgrep> )+disable-search+reload($RG_PREFIX {q} || true)+rebind(change,ctrl-f)" \
        --bind "esc:abort" \
        --prompt '1. Ripgrep> ' \
        --delimiter : \
        --header '╱ CTRL-R (Ripgrep mode) ╱ CTRL-F (fzf mode) ╱' \
        --preview 'bat --style="numbers,changes" --color=always {1} --highlight-line {2}' \
        --preview-window 'up,70%,border-bottom,+{2}+3/3,~3'
    )
    # Exit if no selection was made (e.g., ESC was pressed)
    [ -z "${selected[*]}" ] && return 0
    [ ${#selected[@]} ] && code -ng "${selected[@]:0:1}:${selected[@]:1:1}:${selected[@]:2:1}"
  }

  # Customisations
  # ------------
  # Advanced customization of fzf options via _fzf_comprun function
  # - The first argument to the function is the name of the command.
  # - You should make sure to pass the rest of the arguments ($@) to fzf.
_fzf_comprun () {
  local command=$1
  shift

  # One liner: tree-view for dirs, bat for regular files
  local _smart_preview='[[ -d {} ]] && eza -T {} | head -200 || \
                         bat --style="numbers,changes" --color=always {}'

  case "$command" in
    cd)            fzf --preview 'eza -T {} | head -200' "$@" ;;
    export|unset)  fzf --preview "eval 'echo \$'{}"      "$@" ;;
    ssh)           fzf --preview 'dig {}'                "$@" ;;
    *)             fzf --preview "$_smart_preview"       "$@" ;;
  esac
}

  export FZF_DEFAULT_COMMAND="fd --type f"
  export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
  --layout reverse
  --border
  --style full
  --preview-window "up,60%"
  --color=dark
  --color=fg:-1,bg:-1,hl:#c678dd,fg+:#ffffff,bg+:#4b5263,hl+:#d858fe
  --color=info:#98c379,prompt:#61afef,pointer:#be5046,marker:#e5c07b,spinner:#61afef,header:#61afef
  '
fi

if (( $+commands[nvim] )); then
  alias {vi,vim}=nvim
fi
